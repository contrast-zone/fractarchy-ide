(
    tree 
    (
        (
            node 
            (
                name "Fractarchy Note 0.1 Basics" 
            )
        )
        (
            title Fractarchy Note 0.1 Basics 
        )
        (
            image "image1.png" 
        )
        (
            paragraph Let's introduce 
            (
                bold Fractarchy Note 
            )
            , a note taking application, graphical outliner, 
            and personal knowledge base. As one might already 
            guess, Fractarchy Note is a bit unusual creation. 
            Distinctive design choices made in creation of 
            Fractarchy Note are supposed to embark users on a 
            brave adventure while discovering its carefully 
            weighed virtues and flaws. 
        )
        (
            paragraph Its coding fragment requires an open 
            minded approach to be understood, while its 
            graphical fragment requires a venturesome spirit 
            to have fun with. This combination provides an 
            unique balance between contents creation and 
            contents navigation. Finally, a fair amount of 
            user creativity will be the judge of Fractarchy 
            Note fitness for particular purposes. 
        )
    )
    (
        branches 
        (
            tree 
            (
                (
                    node 
                    (
                        name "1. introduction" 
                    )
                )
                (
                    title 1. introduction 
                )
                (
                    paragraph Fractarchy Note represents an 
                    attractively deviant organizer of textual and 
                    graphical data. It can be used for keeping 
                    knowledge and retrieving related information. 
                )
                (
                    paragraph Fractarchy Note is made for power-users 
                    who seek for a bold and distinctive approach to 
                    managing notes. The intention is to attract users 
                    with an affinity to programming. 
                )
                (
                    paragraph Fractarchy Note's asymptotic graph 
                    navigator shows notes in a zooming-elements based, 
                    parent-children orbiting, and fractal-structure 
                    inspired, original user interface. 
                )
                (
                    paragraph Finally, user content is created in a 
                    novel, minimal, human readable markup language. 
                    Such content is then available in a familiar form 
                    of text file residing in a folder of your choice. 
                )
            )
            (
                branches 
                (
                    tree 
                    (
                        (
                            node 
                            (
                                name "1.1. use cases" 
                            )
                        )
                        (
                            title 1.1. use cases 
                        )
                        (
                            paragraph Fractarchy Note 
                            (
                                bold is suited 
                            )
                            to be used as: 
                            (
                                ulist 
                                (
                                    litem static content pages creation platform 
                                )
                                (
                                    litem mind map planner 
                                )
                                (
                                    litem note taking manager 
                                )
                                (
                                    litem hierarchical data outliner 
                                )
                                (
                                    litem personal knowledge base keeper 
                                )
                                (
                                    litem ... 
                                )
                            )
                        )
                        (
                            paragraph Fractarchy Note 
                            (
                                bold is not suited 
                            )
                            to be used for: 
                            (
                                ulist 
                                (
                                    litem dynamic content pages creation 
                                )
                            )
                        )
                    )
                )
            )
        )
        (
            tree 
            (
                (
                    node 
                    (
                        name "2. user interface" 
                    )
                )
                (
                    title 2. user interface 
                )
                (
                    paragraph Fractarchy Note user interface and 
                    functionality is imbued with symmetry. Although 
                    one may consider it unconventional, the symmetry 
                    was seriously taken into account upon shaping the 
                    direction of Fractarchy Note user interface 
                    features. Contents code pane &lpar;left&rpar; 
                    contrasts contents display pane &lpar;right&rpar;, 
                    while navigate/read mode &lpar;initial&rpar; 
                    contrasts edit/preview mode &lpar;alternate&rpar;. 
                )
                (
                    paragraph Underneath the Fractarchy Note user 
                    interface, the backend core comprises structured 
                    document tree &lpar;SDT&rpar; file format 
                    implementation, thus forming an elementary kind of 
                    hierarchical database of sub-documents. 
                )
                (
                    paragraph SDT files are loaded into and saved from 
                    the application using input and output icons 
                    placed at the window bottom-left and top-right 
                    area. 
                )
            )
            (
                branches 
                (
                    tree 
                    (
                        (
                            node 
                            (
                                name "2.1. navigate/read mode" 
                            )
                        )
                        (
                            title 2.1. navigate/read mode 
                        )
                        (
                            paragraph The application starts in navigate mode. 
                            Navigate mode presents SDT fragments in orbitable 
                            and zoomable ovals that form a seamless dynamic 
                            fractal user interface. 
                        )
                        (
                            paragraph We navigate the entire fractal structure 
                            using these five kinds of gestures: 
                            (
                                olist 
                                (
                                    litem dragging inside the central oval area to pan 
                                    its contents 
                                )
                                (
                                    litem dragging orbiting ovals around the central 
                                    oval to rotate them 
                                )
                                (
                                    litem dragging any orbiting oval towards center to 
                                    zoom it in 
                                )
                                (
                                    litem dragging the central oval towards orbit to 
                                    zoom it out 
                                )
                                (
                                    litem mouse wheel zooming the central oval to 
                                    switch between navigating and reading sub-modes. 
                                )
                            )
                        )
                        (
                            paragraph Alternatively to the above gestures, we 
                            can also click arrow icons on two compass rings 
                            placed at the window top-left and bottom-right 
                            area. 
                        )
                    )
                )
                (
                    tree 
                    (
                        (
                            node 
                            (
                                name "2.2. edit/preview mode" 
                            )
                        )
                        (
                            title 2.2. edit/preview mode 
                        )
                        (
                            paragraph From the read sub-mode we can enter 
                            edit/preview mode by clicking related icons. 
                            Edit/preview session detaches and prepares the 
                            current oval &lpar;together with its subsequent 
                            ovals&rpar; for creating, updating, and deleting 
                            sub-tree of notes. 
                        )
                        (
                            paragraph In this mode, the left pane holds 
                            editable sub-tree of notes code, while the right 
                            pane holds selectable sub-tree of notes layout. 
                            Unlike navigate/read mode, edit/preview mode 
                            allows access to clipboard operations. 
                        )
                        (
                            paragraph From this mode we can also print the 
                            curent sub-tree of notes. Printing is sensitive to 
                            actual window width, so resizing Fractarchy Note 
                            window may be applied to reach a desired printing 
                            layout. 
                        )
                        (
                            paragraph When we are done editing or printing, we 
                            can accept or reject possible changes to notes, 
                            ending the session by clicking related icons. The 
                            interface then brings us back to the read 
                            sub-mode. 
                        )
                    )
                )
            )
        )
        (
            tree 
            (
                (
                    node 
                    (
                        name "3. structured document tree reference" 
                    )
                )
                (
                    title 3. structured document tree reference 
                )
                (
                    paragraph Composing contents in Fractarchy Note is 
                    consisted of coding main structured document tree 
                    &lpar;SDT&rpar; file and importing graphical or 
                    other resources. Contents of SDT file is an 
                    s-expr. In computer programming, an s-expr 
                    &lpar;or symbolic expression, abbreviated as sexpr 
                    or sexp&rpar; is an expression in a like-named 
                    notation for nested list 
                    &lpar;tree-structured&rpar; data. S-expr is 
                    written as a list of elements inside parenthesis. 
                    Elements may include words or other s-exprs 
                    delimited by whitespace. Whitespaces in s-exprs 
                    include any number of space characters, tabs, and 
                    line splits. Initially, in a case of Fractarchy 
                    Note, the first word to the left in s-expr 
                    &lpar;also called head&rpar; is meant to identify 
                    an s-expr type. In example, s-expr like 
                    (
                        icode "(tree ... contents ...)" 
                    )
                    means that we assert 
                    (
                        icode "... contents ..." 
                    )
                    of a type 
                    (
                        icode "tree" 
                    )
                    , while in s-expr 
                    (
                        icode 
                        "(tree (node ... contents ...) (branches ... contents ...))" 
                    )
                    we nested 
                    (
                        icode "node" 
                    )
                    type and 
                    (
                        icode "branches" 
                    )
                    type s-exprs within 
                    (
                        icode "tree" 
                    )
                    type s-expr. 
                )
                (
                    paragraph In Fractarchy Note, there exist a number 
                    of predefined s-expr types which we will cover in 
                    the following sub-sections. 
                )
            )
            (
                branches 
                (
                    tree 
                    (
                        (
                            node 
                            (
                                name "3.1. tree structure s-exprs" 
                            )
                        )
                        (
                            title 3.1. tree structure s-exprs 
                        )
                        (
                            paragraph SDT file format is structured in a 
                            following pattern: 
                        )
                        (
                            bcode
                            " (                                                "
                            "     tree                                         "
                            "     (                                            "
                            "         node                                     "
                            "         ... node contents ...                    "
                            "     )                                            "
                            "     (                                            "
                            "         branches                                 "
                            "         (                                        "
                            "             tree                                 "
                            "             ... tree contents, recursively ...   "
                            "         )                                        "
                            "         (                                        "
                            "             tree                                 "
                            "             ... tree contents, recursively ...   "
                            "         )                                        "
                            "         ... other tree items as branches ...     "
                            "     )                                            "
                            " )                                                "
                        )
                        (
                            paragraph The tree structure is an s-expr combined 
                            by 
                            (
                                icode "tree" 
                            )
                            , 
                            (
                                icode "node" 
                            )
                            , and 
                            (
                                icode "branches" 
                            )
                            type s-exprs. From the top, we start with 
                            (
                                icode "tree" 
                            )
                            type s-expr, nesting 
                            (
                                icode "node" 
                            )
                            type s-expr within. If we want the 
                            (
                                icode "node" 
                            )
                            to branch, we put a 
                            (
                                icode "branches" 
                            )
                            type s-expr next to it, to further enumerate 
                            branching using 
                            (
                                icode "tree" 
                            )
                            type s-exprs. We can nest 
                            (
                                icode "tree" 
                            )
                            type s-exprs recursively to any depth. When we 
                            reach the final nodes that don't branch further, 
                            we simply omit the 
                            (
                                icode "branches" 
                            )
                            type s-expr. 
                        )
                        (
                            paragraph During visualization, each 
                            (
                                icode "node" 
                            )
                            type s-expr is rendered within its own oval, while 
                            orbiting child ovals are extracted from relative 
                            (
                                icode "branches" 
                            )
                            type s-expr. 
                        )
                    )
                )
                (
                    tree 
                    (
                        (
                            node 
                            (
                                name "3.2. document structure s-exprs" 
                            )
                        )
                        (
                            title 3.2. document structure s-exprs 
                        )
                        (
                            paragraph SDT sub-documents are placed inside 
                            nodes from the tree structure in a following 
                            s-expr: 
                        )
                        (
                            bcode
                            " (                                         "
                            "     node                                  "
                            "     ... sub-document contents ...         "
                            " )                                         "
                        )
                        (
                            paragraph Alternatively, sub-documents may be 
                            additionally written by the following s-expr: 
                        )
                        (
                            bcode
                            " (                                         "
                            "     (                                     "
                            "         node                              "
                            "         (                                 "
                            "             name ... node name ...        "
                            "         )                                 "
                            "     )                                     "
                            "     ... sub-document contents ...         "
                            " )                                         "
                        )
                        (
                            paragraph where 
                            (
                                icode "... node name ..." 
                            )
                            is a list of words representing the node name. 
                        )
                        (
                            paragraph 
                            (
                                icode "... sub-document contents ..." 
                            )
                            from the above two patterns is a list of prose 
                            words that follow the 
                            (
                                icode "node" 
                            )
                            head. Within the prose words, we can combine 
                            s-exprs of types from the following table: 
                        )
                        (
                            bcode
                            "+----------------------------------------+---------------------------+"
                            "!  s-expr type                           !  accepts contents         !"
                            "+----------------------------------------+---------------------------+"
                            "!  * `comment`: ignored comments         !  prose                    !"
                            "!  * `bold`: bold text                   !  prose                    !"
                            "!  * `italic`: italic text               !  prose                    !"
                            "!  * `heading1` to `heading6`: headings  !  prose                    !"
                            "!  * `paragraph`: paragraph              !  prose                    !"
                            "!  * `bquote`: block quote               !  prose                    !"
                            "!  * `ulist`: unordered list             !                           !"
                            "!      * `litem`: unordered list item    !  prose                    !"
                            "!                                        !                           !"
                            "!  * `olist`: ordered list               !                           !"
                            "!      * `litem`: ordered list item      !  prose                    !"
                            "!                                        !                           !"
                            "!  * `clist`: checklist                  !                           !"
                            "!      * `eitem`: empty box item         !  prose                    !"
                            "!      * `xitem`: crossed box item       !  prose                    !"
                            "!      * `yitem`: checked box item       !  prose                    !"
                            "!                                        !                           !"
                            "!  * `icode`: inline code                !  quoted string            !"
                            "!  * `bcode`: block code                 !  list of quoted strings   !"
                            "!  * `image`: image                      !  quoted string            !"
                            "!  * `hyperlink`: hyperlink              !  quoted string then prose !"
                            "!  * `hruler`: horizontal ruler          !                           !"
                            "!  * `newline`: line break               !                           !"
                            "!  * `html`: HTML code without scripting !  list of quoted strings   !"
                            "+----------------------------------------+---------------------------+"
                        )
                        (
                            paragraph Sub-items from the above itemization are 
                            describing acceptable assertions within the items. 
                        )
                    )
                )
                (
                    tree 
                    (
                        (
                            node 
                            (
                                name "3.3. templating system s-exprs" 
                            )
                        )
                        (
                            title 3.3. templating system s-exprs 
                        )
                        (
                            paragraph Templating and scripting in SDT file 
                            format is something reserved for the future 
                            versions of Fractarchy Note. This would open a 
                            wide space for managing diverse libraries in a 
                            pursuit for displaying expressions like math, 
                            chemistry, physics, or similar expressions. Not to 
                            stop there, one could maybe conceive even graph 
                            visualization or similar libraries that would 
                            render vector graphics within the Fractarchy Note 
                            user interface. 
                        )
                        (
                            paragraph We have to say that we are excited about 
                            all the planned extensions. If you are interested 
                            in document templating in conjunction with 
                            document scripting, we would be delighted to 
                            receive occasional visits to our official GitHub 
                            repository to check for new Fractarchy Note 
                            version updates. 
                        )
                    )
                )
            )
        )
        (
            tree 
            (
                (
                    node 
                    (
                        name 
                        "4. licencing, owning a copy, and joining mailing list" 
                    )
                )
                (
                    title 4. licensing, owning a copy, and joining 
                    mailing list 
                )
                (
                    hruler 
                )
                (
                    paragraph 
                    (
                        italic Fractarchy Note is shared to public under 
                        conditional 
                        (
                            (
                                hyperlink 
                                "http://creativecommons.org/licenses/by-nd/4.0/" 
                            )
                            Creative Commons Attribution-NoDerivatives 4.0 
                            International License 
                        )
                        by 
                        (
                            (
                                hyperlink "https://github.com/contrast-zone/" 
                            )
                            Contrast Zone 
                        )
                        productions. Conditions are defined as follows: 
                        (
                            ulist 
                            (
                                litem 
                                (
                                    bold use-type: student 
                                )
                                (
                                    newline 
                                )
                                100% free 
                            )
                            (
                                litem 
                                (
                                    bold use-type: starter 
                                )
                                (
                                    newline 
                                )
                                personal use 
                                (
                                    newline 
                                )
                                up to 50 nodes per project 
                                (
                                    newline 
                                )
                                free of charge 
                            )
                            (
                                litem 
                                (
                                    bold use-type: personal 
                                )
                                (
                                    newline 
                                )
                                unlimited personal use 
                                (
                                    newline 
                                )
                                personal customer support 
                                (
                                    newline 
                                )
                                14 days trial before purchase 
                                (
                                    newline 
                                )
                                20$ one-time payment per user 
                            )
                            (
                                litem 
                                (
                                    bold use-type: commercial 
                                )
                                (
                                    newline 
                                )
                                unlimited commercial use 
                                (
                                    newline 
                                )
                                commercial customer support 
                                (
                                    newline 
                                )
                                14 days trial before purchase 
                                (
                                    newline 
                                )
                                40$ one-time payment per user 
                            )
                        )
                    )
                    (
                        paragraph 
                        (
                            italic Purchasing is conducted using our software 
                            official PayPal funding pages at 
                            (
                                (
                                    hyperlink 
                                    "https://www.paypal.com/paypalme/contrastzone/0" 
                                )
                                paypalme 
                            )
                            web site. 
                        )
                    )
                )
                (
                    hruler 
                )
                (
                    paragraph 
                    (
                        italic A copy of Fractarchy Note software bundle 
                        can be downloaded from 
                        (
                            (
                                hyperlink 
                                "https://github.com/fractarchy/fractarchy-note/" 
                            )
                            dedicated github pages 
                        )
                        . 
                    )
                )
                (
                    hruler 
                )
                (
                    paragraph 
                    (
                        italic To ask any questions about Fractarchy Note, 
                        to leave a comment, to report a bug, or to track 
                        new releases, please visit 
                        (
                            (
                                hyperlink 
                                "https://github.com/fractarchy/fractarchy-note/discussions" 
                            )
                            Fractarchy Note discussions center 
                        )
                        . 
                    )
                )
                (
                    hruler 
                )
                (
                    paragraph 
                    (
                        italic To request customer support, please send us 
                        a message to 
                        (
                            (
                                hyperlink "mailto:contrast-zone-support@gmail.com" 
                            )
                            Contrast Zone support center 
                        )
                        . 
                    )
                )
                (
                    hruler 
                )
                (
                    paragraph With this section, we conclude 
                    Fractarchy Note instructions exposure. Have a 
                    creative and productive visual contents coding. 
                )
            )
        )
    )
)
